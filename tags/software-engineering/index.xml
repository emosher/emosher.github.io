<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software engineering on emosher.dev</title><link>https://emosher.dev/tags/software-engineering/</link><description>Recent content in software engineering on emosher.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 11 Apr 2014 21:37:10 +0000</lastBuildDate><atom:link href="https://emosher.dev/tags/software-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Computer Science vs. Software Engineering</title><link>https://emosher.dev/posts/computer-science-vs-software-engineering/</link><pubDate>Fri, 11 Apr 2014 21:37:10 +0000</pubDate><guid>https://emosher.dev/posts/computer-science-vs-software-engineering/</guid><description>&amp;ldquo;Computer Science&amp;rdquo; vs. &amp;ldquo;Software Engineering&amp;rdquo;
That dichotomy is something that I have seen for as long as I have been involved with technology. I see lots of brilliant people that can talk theories, concepts, and patterns all day long. When it comes to building useful working applications, that is not their strong suit.
Before we go further&amp;hellip; As much as the preceeding statements may seem inflammatory, that&amp;rsquo;s not the intent. The way I see it - there is merit to both Computer Science and Software Engineering.</description></item></channel></rss>